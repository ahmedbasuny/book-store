
name: 'book-store'
services:
  catalog-service:
    image: ahmedbasuny/bookstore-catalog-service
    container_name: catalog-service
    environment:
      DB_HOST: catalog-db
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    ports:
      - "8081:8081"
    restart: unless-stopped
    depends_on:
      catalog-db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m

  catalog-db:
    image: postgres:16-alpine
    container_name: catalog-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - catalog_db:/data/postgres
    ports:
      - "15432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 500m

  pgadmin:
    image: dpage/pgadmin4:8.12.0
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./pgadmin_servers.json:/pgadmin4/servers.json
    ports:
      - '5050:5050'
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/bin/echo 'catalog-db:5432:*:postgres:postgres' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"

  portainer: # admin123456789
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  catalog_db:
  portainer_data:
  pgadmin:

