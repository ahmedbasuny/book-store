version: 3

vars:
  GOOS: "{{default OS .GOOS}}"
  MVNW: '{{if eq .GOOS "windows"}}mvnw.cmd{{else}}./mvnw{{end}}'
  DC_DIR: "deployment/docker-compose"
  INFRA_DC_FILE: "{{.DC_DIR}}/infra.yml"

tasks:
  default:
    cmds:
      - task: test
  test:
    deps: [ format ]
    cmds:
      - "{{.MVNW}} clean verify"

  format:
    cmds:
      - "{{.MVNW}} spotless:apply"

  build:
    deps: [ format ]
    cmds:
      - "{{.MVNW}} -pl catalog-service spring-boot:build-image -DskipTests"
      - "{{.MVNW}} -pl order-service spring-boot:build-image -DskipTests"
      - "{{.MVNW}} -pl notification-service spring-boot:build-image -DskipTests"
      - "{{.MVNW}} -pl api-gateway spring-boot:build-image -DskipTests"

  build-catalog:
    deps: [ format ]
    cmds:
      - "{{.MVNW}} -pl catalog-service spring-boot:build-image -DskipTests"

  build-order:
    deps: [ format ]
    cmds:
      - "{{.MVNW}} -pl order-service spring-boot:build-image -DskipTests"

  build-notification:
    deps: [ format ]
    cmds:
      - "{{.MVNW}} -pl notification-service spring-boot:build-image -DskipTests"

  start_infra:
    deps: [ build ]
    cmds:
      - "docker compose -f {{.INFRA_DC_FILE}} up -d"

  stop_infra:
    cmds:
      - "docker compose -f {{.INFRA_DC_FILE}} stop"
      - "docker compose -f {{.INFRA_DC_FILE}} rm -f"

  restart_infra:
    cmds:
      - task: stop_infra
      - task: sleep
      - task: start_infra

  sleep:
    delay: "5s"